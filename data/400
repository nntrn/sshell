{
  "id": 400,
  "title": "jq - recursively slice array values to get first child only",
  "created": "2022-09-30T04:49:10Z",
  "modified": "2022-09-30T04:49:10Z",
  "code": [
    "jq 'walk(if type == \"array\" then (.[0]) else . end)'"
  ],
  "example": [
    "cat array-of-objects.json | jq '.[]|walk(if type == \"array\" then (if length > 10 then (.|join(\", \")) else . end) else . end)'"
  ],
  "output": "",
  "description": [
    "definition of builtin walk function: ",
    "# Apply f to composite entities recursively, and to atoms",
    "def walk(f):",
    "  . as $in",
    "  | if type == \"object\" then",
    "      reduce keys_unsorted[] as $key",
    "        ( {}; . + { ($key):  ($in[$key] | walk(f)) } ) | f",
    "  elif type == \"array\" then map( walk(f) ) | f",
    "  else f",
    "  end;"
  ],
  "command": [
    "jq"
  ],
  "language": "bash",
  "tags": [
    "jq"
  ],
  "url": "https://raw.githubusercontent.com/stedolan/jq/master/src/builtin.jq"
}
