{
  "id": "167",
  "title": "ansible-doc snippet",
  "language": "bash",
  "category": "ansible-doc",
  "guid": "829afe48-9435-4774-8a89-3be36f15d843",
  "url": "https://www.oreilly.com/library/view/learn-ansible/9781788998758/6fc4eb99-e58e-46d3-b9d5-0370f293ec54.xhtml",
  "modified": "2022-01-03T06:11:18Z",
  "created": "2021-11-29T16:35:32Z",
  "tags": [
    "ansible"
  ],
  "description": [],
  "cli": [
    "ansible-doc awx.awx.tower_ad_hoc_command --snippet",
    ""
  ],
  "example": [],
  "output": [
    "- name: create, update, or destroy Ansible Tower ad hoc commands.",
    "  tower_ad_hoc_command:",
    "      become_enabled:        # If the become flag should be set.",
    "      credential:            # (required) Credential to use for ad hoc command.",
    "      diff_mode:             # Show the changes made by Ansible tasks where supported",
    "      extra_vars:            # Extra variables to use for the ad hoc command..",
    "      forks:                 # The number of forks to use for this ad hoc execution.",
    "      interval:              # The interval to request an update from Tower.",
    "      inventory:             # (required) Inventory to use for the ad hoc command.",
    "      job_type:              # Job_type to use for the ad hoc command.",
    "      limit:                 # Limit to use for the ad hoc command.",
    "      module_args:           # The arguments to pass to the module.",
    "      module_name:           # (required) The Ansible module to execute.",
    "      timeout:               # If waiting for the command to complete this will abort after this amount of seconds",
    "      tower_config_file:     # Path to the Tower or AWX config file. If provided, the other locations for config files will not be considered.",
    "      tower_host:            # URL to your Tower or AWX instance. If value not set, will try environment variable `TOWER_HOST' and then config files If value not specified by any means, the value of",
    "                               `127.0.0.1' will be used",
    "      tower_oauthtoken:      # The Tower OAuth token to use. This value can be in one of two formats. A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX) A dictionary structure as",
    "                               returned by the tower_token module. If value not set, will try environment variable `TOWER_OAUTH_TOKEN' and then config files",
    "      tower_password:        # Password for your Tower or AWX instance. If value not set, will try environment variable `TOWER_PASSWORD' and then config files",
    "      tower_username:        # Username for your Tower or AWX instance. If value not set, will try environment variable `TOWER_USERNAME' and then config files",
    "      validate_certs:        # Whether to allow insecure connections to Tower or AWX. If `no', SSL certificates will not be validated. This should only be used on personally controlled sites using self-",
    "                               signed certificates. If value not set, will try environment variable `TOWER_VERIFY_SSL' and then config files",
    "      verbosity:             # Verbosity level for this ad hoc command run",
    "      wait:                  # Wait for the command to complete.",
    ""
  ]
}
