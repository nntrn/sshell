{
  "id": 339,
  "title": "IFS - word splitting observed in for loops",
  "created": "2022-06-02T02:34:36Z",
  "modified": "2022-06-02T02:34:36Z",
  "code": [
    "IFS=$' '",
    "items=\"a b c\"",
    "for x in $items; do",
    "    echo \"$x\"",
    "done",
    "",
    "IFS=$'\\n'",
    "for y in $items; do",
    "    echo \"$y\"",
    "done"
  ],
  "example": "",
  "output": [
    "a",
    "b",
    "c",
    "a b c"
  ],
  "description": [
    "The IFS variable - which stands for Internal Field Separator - controls what Bash calls word splitting. When set to a string, each character in the string is considered by Bash to separate words. This governs how bash will iterate through a sequence. ",
    "",
    "In the first for loop, IFS is set to $' '. (The $'...' syntax creates a string, with backslash-escaped characters replaced with special characters - like \"\\t\" for tab and \"\\n\" for newline.) Within the for loops, x and y are set to whatever bash considers a \"word\" in the original sequence. For the first loop, IFS is a space, meaning that words are separated by a space character. For the second loop, \"words\" are separated by a newline, which means bash considers the whole value of \"items\" as a single word. If IFS is more than one character, splitting will be done on any of those characters."
  ],
  "command": [
    "IFS=$'"
  ],
  "language": "bash",
  "tags": [],
  "url": "http://redsymbol.net/articles/unofficial-bash-strict-mode/"
}
