{
  "id": 327,
  "title": "cProfile - Performance Profiling Python One-Liner",
  "created": "2022-05-25T12:36:32Z",
  "modified": "2022-05-26T23:53:58Z",
  "code": [
    "python -m cProfile file.py",
    "",
    "python -m profile file.py"
  ],
  "example": "",
  "output": [
    "         1347 function calls (1290 primitive calls) in 0.003 seconds",
    "",
    "   Ordered by: standard name",
    "",
    "   ncalls  tottime  percall  cumtime  percall filename:lineno(function)",
    "        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:1002(_find_and_load)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:112(release)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:152(__init__)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:156(__enter__)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:160(__exit__)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:166(_get_module_lock)",
    "        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:185(cb)"
  ],
  "description": [
    "To profile a function that takes a single argument, you can do:",
    "",
    "``",
    "import cProfile",
    "import re",
    "cProfile.run('re.compile(\"foo|bar\")')",
    "```",
    "",
    "```",
    "      197 function calls (192 primitive calls) in 0.002 seconds",
    "",
    "Ordered by: standard name",
    "",
    "ncalls  tottime  percall  cumtime  percall filename:lineno(function)",
    "     1    0.000    0.000    0.001    0.001 <string>:1(<module>)",
    "     1    0.000    0.000    0.001    0.001 re.py:212(compile)",
    "     1    0.000    0.000    0.001    0.001 re.py:268(_compile)",
    "     1    0.000    0.000    0.000    0.000 sre_compile.py:172(_compile_charset)",
    "     1    0.000    0.000    0.000    0.000 sre_compile.py:201(_optimize_charset)",
    "     4    0.000    0.000    0.000    0.000 sre_compile.py:25(_identityfunction)",
    "   3/1    0.000    0.000    0.000    0.000 sre_compile.py:33(_compile)",
    "```",
    "",
    "The first line indicates that 197 calls were monitored. Of those calls, 192 were primitive, meaning that the call was not induced via recursion. The next line: Ordered by: standard name, indicates that the text string in the far right column was used to sort the output. The column headings include:",
    "",
    "ncalls",
    "for the number of calls.",
    "",
    "tottime",
    "for the total time spent in the given function (and excluding time made in calls to sub-functions)",
    "",
    "percall",
    "is the quotient of tottime divided by ncalls",
    "",
    "cumtime",
    "is the cumulative time spent in this and all subfunctions (from invocation till exit). This figure is accurate even for recursive functions.",
    "",
    "percall",
    "is the quotient of cumtime divided by primitive calls",
    "",
    "filename:lineno(function)",
    "provides the respective data of each function",
    "",
    "When there are two numbers in the first column (for example 3/1), it means that the function recursed. The second value is the number of primitive calls and the former is the total number of calls. Note that when the function does not recurse, these two values are the same, and only the single figure is printed.",
    ""
  ],
  "language": "python",
  "tags": null
}
