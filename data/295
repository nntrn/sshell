{
  "id": 295,
  "title": "jq - target objects in array using key",
  "created": "2022-04-27T20:54:01Z",
  "modified": "2022-04-27T20:54:01Z",
  "code": [
    "echo '[{\"id\": \"first\", \"val\": 1}, {\"id\": \"second\", \"val\": 2}]' | jq '.[] | select(.id == \"second\")'"
  ],
  "example": "",
  "output": [
    "{",
    "  \"id\": \"second\",",
    "  \"val\": 2",
    "}"
  ],
  "description": [
    "   select(boolean_expression)",
    "       The function select(foo) produces its input unchanged if foo returns true for that input, and produces no output otherwise.",
    "",
    "       It´s useful for filtering lists: [1,2,3] | map(select(. >= 2)) will give you [2,3].",
    "",
    "           jq ´map(select(. >= 2))´",
    "              [1,5,3,0,7]",
    "           => [5,3,7]",
    "",
    "           jq ´.[] | select(.id == \"second\")´",
    "              [{\"id\": \"first\", \"val\": 1}, {\"id\": \"second\", \"val\": 2}]",
    "           => {\"id\": \"second\", \"val\": 2}"
  ],
  "command": [
    "echo",
    "jq",
    "select(.id"
  ],
  "language": "bash",
  "tags": [
    "jq"
  ]
}
